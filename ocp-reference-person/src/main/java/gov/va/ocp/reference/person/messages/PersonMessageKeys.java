package gov.va.ocp.reference.person.messages;

import java.util.Locale;

import org.springframework.context.MessageSource;
import org.springframework.context.annotation.AnnotationConfigApplicationContext;

import gov.va.ocp.framework.config.MessageKeysConfig;
import gov.va.ocp.framework.messages.MessageKey;

/**
 * The source for messages generated by the micro-service code.
 *
 * @author aburkholder
 */
public enum PersonMessageKeys implements MessageKey {

	/** Minimum allowed value validation for PID; no args */
	OCP_PERSON_INFO_REQUEST_PID_MIN("ocp.reference.person.info.request.pid.Min",
			"PersonInfoRequest.participantID cannot be zero"),
	/** PID cannot be null validation; no args */
	OCP_PERSON_INFO_REQUEST_PID_NOTNULL("ocp.reference.person.info.request.pid.NotNull",
			"PersonInfoRequest.participantID cannot be null"),
	/** Payload cannot be null validation; no args */
	OCP_PERSON_INFO_REQUEST_NOTNULL("ocp.reference.person.info.request.NotNull",
			"PersonInfoRequest Payload cannot be null"),

	/** Response has different PID than the request; no args */
	OCP_PERSON_INFO_REQUEST_PID_INCONSISTENT("ocp.reference.person.info.request.pid.inconsistent",
			"Response returned an invalid Participant ID."),
	/** Response has different PID than the logged in user; no args */
	OCP_PERSON_INFO_REQUEST_PID_INVALID("ocp.reference.person.info.request.pid.invalid",
			"Response has different PID than the logged in user.");

	/** The key - must be identical to the key in framework-messages.properties */
	private String key;
	/** A default message, in case the key is not found in framework-messages.properties */
	private String defaultMessage;
	/** The spring message source */
	private MessageSource messageSource;

	/**
	 * Construct keys with their property file counterpart key and a default message.
	 *
	 * @param key - the key as declared in the properties file
	 * @param defaultMessage - in case the key cannot be found
	 */
	private PersonMessageKeys(String key, String defaultMessage) {
		this.key = key;
		this.defaultMessage = defaultMessage;
		// Each enumeration must manually get spring bean
		AnnotationConfigApplicationContext appContext = new AnnotationConfigApplicationContext(MessageKeysConfig.class);
		this.messageSource = ((MessageSource) appContext.getBean("messageSource"));
		appContext.close();
	}

	/*
	 * (non-Javadoc)
	 *
	 * @see gov.va.ocp.framework.messages.MessageKey#getKey()
	 */
	@Override
	public String getKey() {
		return this.key;
	}

	/*
	 * (non-Javadoc)
	 *
	 * @see gov.va.ocp.framework.messages.MessageKey#getMessage(java.lang.Object[])
	 */
	@Override
	public String getMessage(Object... params) {
		return messageSource.getMessage(this.getKey(), params, this.defaultMessage, Locale.getDefault());
	}
}
