package gov.va.ocp.vetservices.claims.messages;

import java.util.Locale;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.MessageSource;

import gov.va.ocp.framework.messages.MessageKey;

/**
 * The source for messages generated by the micro-service code.
 *
 * @author rajuthota
 */
public enum ClaimsMessageKeys implements MessageKey {

	OCP_CLAIM_DETAIL_INFO_REQUEST_NOTNULL("ocp.vetservices.claims.claimdetail.request.NotNull",
			"ClaimDeatilRequest Payload cannot be null"),
	
	OCP_CLAIMS_INFO_REQUEST_NOTNULL("ocp.vetservices.claims.info.request.NotNull",
			"ClaimsInfoRequest Payload cannot be null"),
	
	/** PID cannot be null validation; no args */
	OCP_CLAIMS_INFO_REQUEST_PID_NOTNULL("ocp.reference.person.info.request.pid.NotNull",
			"ClaimInfoRequest.participantID cannot be null"),
	/** PID cannot be null validation; no args */
	OCP_CLAIMS_INFO_REQUEST_CLAIMID_NOTNULL("ocp.reference.person.info.request.claimId.NotNull",
			"ClaimInfoRequest.claimId cannot be null");

	/** The key - must be identical to the key in framework-messages.properties */
	private String key;
	/** A default message, in case the key is not found in framework-messages.properties */
	private String defaultMessage;

	/** The spring message source */
	@Autowired
	private MessageSource messageSource;

	/**
	 * Construct keys with their property file counterpart key and a default message.
	 *
	 * @param key - the key as declared in the properties file
	 * @param defaultMessage - in case the key cannot be found
	 */
	private ClaimsMessageKeys(String key, String defaultMessage) {
		this.key = key;
		this.defaultMessage = defaultMessage;
	}

	/*
	 * (non-Javadoc)
	 *
	 * @see gov.va.ocp.framework.messages.MessageKey#getKey()
	 */
	@Override
	public String getKey() {
		return this.key;
	}

	/*
	 * (non-Javadoc)
	 *
	 * @see gov.va.ocp.framework.messages.MessageKey#getMessage(java.lang.Object[])
	 */
	@Override
	public String getMessage(Object... params) {
		return messageSource.getMessage(this.getKey(), params, this.defaultMessage, Locale.getDefault());
	}
}
