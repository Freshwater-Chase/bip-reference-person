<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
    
    <parent>
		<groupId>gov.va.os.reference.spring.boot</groupId>
		<artifactId>os-reference-spring-boot-parentpom</artifactId>
		<version>0.0.1-SNAPSHOT</version>
		<relativePath>../os-reference-spring-boot-parentpom</relativePath>
	</parent>
	
    <artifactId>os-reference-spring-boot-service</artifactId>
    <packaging>jar</packaging>
    
    <name>${project.artifactId}</name>
    <description>Service Implementation for Spring Boot Reference Project</description>
    
    <dependencies>
    	<dependency>
            <groupId>gov.va.os.reference.spring.boot</groupId>
            <artifactId>os-reference-spring-boot-shared-library</artifactId>
            <version>0.0.1-SNAPSHOT</version>
        </dependency>
		 <dependency>
            <groupId>gov.va.os.reference.spring.boot</groupId>
            <artifactId>os-reference-spring-boot-partner</artifactId>
            <version>0.0.1-SNAPSHOT</version>
        </dependency>
        <dependency>
            <groupId>gov.va.os.reference.spring.boot</groupId>
            <artifactId>os-reference-spring-boot-shared-autoconfigure</artifactId>
            <version>0.0.1-SNAPSHOT</version>
        </dependency>
    	<!-- spring-boot dependencies -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-tomcat</artifactId>
        </dependency>
        <dependency>
        	<groupId>org.springframework.boot</groupId>
        	<artifactId>spring-boot-configuration-processor</artifactId>
        	<optional>true</optional>
        </dependency>
		<dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-aop</artifactId>
        </dependency>
        <!-- spring cloud dependencies -->
        <!-- Spring-cloud Netflix Feign dependency for defining declarative REST clients -->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-openfeign</artifactId>
        </dependency>
        <!-- Spring-cloud Netflix hystrix dependency for circuit breaker implementation -->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-netflix-hystrix</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-netflix-ribbon</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-bus-amqp</artifactId>
        </dependency>
	   <dependency> 
	       <groupId>org.springframework.cloud</groupId>
	       <artifactId>spring-cloud-starter-sleuth</artifactId>
	   </dependency>		   
	   <dependency> 
	       <groupId>org.springframework.cloud</groupId>
	       <artifactId>spring-cloud-stream-binder-rabbit</artifactId>
	   </dependency>
	   <dependency>
		   <groupId>org.springframework.retry</groupId>
		   <artifactId>spring-retry</artifactId>
	   </dependency>
		<dependency> 
	       <groupId>org.springframework.cloud</groupId>
	       <artifactId>spring-cloud-vault-config-consul</artifactId>
	   </dependency>
   		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-consul-config</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-consul-discovery</artifactId>
		</dependency>
		<dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-consul-all</artifactId>
        </dependency>
        <dependency>
            <groupId>net.logstash.logback</groupId>
            <artifactId>logstash-logback-encoder</artifactId>
        </dependency>
        
        <!-- additional jackson dependencies not brought in via spring-boot starters -->
        <dependency>
            <groupId>com.fasterxml.jackson.jaxrs</groupId>
            <artifactId>jackson-jaxrs-base</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.jaxrs</groupId>
            <artifactId>jackson-jaxrs-json-provider</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.module</groupId>
            <artifactId>jackson-module-jaxb-annotations</artifactId>
        </dependency>
		<dependency>
		    <groupId>com.fasterxml.jackson.core</groupId>
		    <artifactId>jackson-annotations</artifactId>
		</dependency>
        
        <!-- jolokia for JMX over HTTP via /jolokia -->
        <dependency>
		    <groupId>org.jolokia</groupId>
		    <artifactId>jolokia-core</artifactId>
		</dependency>
        
        <!-- misc dependencies -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
        </dependency>
       	<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
		</dependency>
        
        <!-- test dependencies -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.jayway.jsonpath</groupId>
            <artifactId>json-path</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>
    
     <build>
        <plugins>
            <plugin>
                <groupId>org.jvnet.jaxb2.maven2</groupId>
                <artifactId>maven-jaxb2-plugin</artifactId>
                <version>${maven-jaxb2-plugin-jvnet.version}</version>
                <configuration>
					<bindingDirectory>${project.basedir}/src/main/resources</bindingDirectory>
					<schemaIncludes>
                          <schemaInclude>**/*.xsd</schemaInclude>
                      </schemaIncludes>
					<bindingDirectory>${project.basedir}/src/main/resources/model/</bindingDirectory>
					<bindingIncludes>
						<include>JAXB-bindings.xjb</include>
					</bindingIncludes>
					<strict>false</strict>
					<extension>true</extension>
					<args>
						<arg>-no-header</arg>
						<arg>-XReplacePrimitives</arg>
						<arg>-XJsr303Annotations</arg>
						<arg>-Xannotate</arg>
					</args>
					<plugins>
						<plugin>
							<groupId>com.github.krasa</groupId>
							<artifactId>krasa-jaxb-tools</artifactId>
							<version>${krasa-jaxb-tools.version}</version>
						</plugin>
						<plugin>
			                <groupId>org.jvnet.jaxb2_commons</groupId>
			                <artifactId>jaxb2-basics-annotate</artifactId>
			                <version>${jaxb2-basics-annotate.version}</version>
			            </plugin>
					</plugins>
				</configuration>
                <executions>
                	<!-- to introduce a new schema/model, copy/paste this entire execution, give it a new id
                		such as v2, give new package like v2 and new include schema directory such as v2 -->
                    <execution>
                    	<id>xjc-v1</id>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
							<generatePackage>gov.va.os.reference.service.api.v1.transfer</generatePackage>
							<schemaDirectory>${project.basedir}/src/main/resources/model/v1</schemaDirectory>
						</configuration>
                    </execution>
                </executions>
            </plugin>
          </plugins>
       </build>

</project>
