version: "3.3"

services:
  
  # Fill this out once the dev team has their app code into the repo
  bip-reference-person:
    image: bipdev/bip-reference-person
    build:
      context: ./bip-reference-person
    environment:
      - spring.profiles.active=local-int
      - spring.cloud.consul.host=consul
      - spring.redis.host=redis
      - spring.cloud.vault.host=vault
      - spring.cloud.consul.config.enabled=true
      - spring.cloud.consul.config.failFast=true
      - spring.cloud.consul.discovery.enabled=true
      - spring.cloud.consul.discovery.register=true
      - spring.cloud.vault.enabled=true
      - spring.cloud.vault.consul.enabled=true
      - bip.framework.security.jwt.enabled=true
    ports:
      - "8080:8080"
    networks:
       - bip
    depends_on:
      - consul
      - redis
      - vault
      - vault-config

  consul:
    image: bipdev/consul:1.4.3
    build:
      context: ./local-dev/consul
    environment:
      - MASTER_ACL_TOKEN=7652ba4c-0f6e-8e75-5724-5e083d72cfe4
    ports:
      - "8500:8500"
    networks:
      - bip

  vault:
    image: vault
    ports:
      - "8200:8200"
    environment:
      - VAULT_DEV_ROOT_TOKEN_ID=${VAULT_TOKEN:-vaultroot}
    networks:
      - bip

  vault-config:
    image: bipdev/vault-config
    build:
      context: ./local-dev/vault-config
    environment:
      - VAULT_ADDR=http://vault:8200
      - VAULT_DEV_ROOT_TOKEN_ID=${VAULT_TOKEN:-vaultroot}
      - CONSUL_HTTP_ADDR=http://consul:8500
      - CONSUL_HTTP_TOKEN=7652ba4c-0f6e-8e75-5724-5e083d72cfe4
    networks:
      - bip
    depends_on:
      - consul
      - vault

  redis:
    image: redis
    networks:
      - bip

  prometheus:
    image:  prom/prometheus:v2.5.0
    ports:
      - "9090:9090"
    volumes: 
      - "./local-dev/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml"
    networks:
      - bip
    depends_on:
      - consul

  grafana:
    image:  bipdev/grafana
    build:
      context: ./local-dev/grafana
    ports:
      - "3000:3000"
    networks:
      - bip
    depends_on:
      - prometheus
      
  #######################################
  # Postgres: The database used by Kong
  #######################################
  kong-database:
    image: postgres:9.6
    restart: always
    environment:
      - POSTGRES_USER=kong
      - POSTGRES_DB=kong
    ports:
      - "54320:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "kong"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - bip
      
  #######################################
  # Kong database migration
  #######################################
  kong-migration:
    image: kong:latest
    # You have to bootstrap the database before running kong. The up command is deprecated and replaced with bootstrap
    command: >
      sh -c "kong migrations bootstrap && 
             curl -i -X POST --url 'http://kong:8001/services/' --data 'name=bip-reference-person' --data 'url=http://bip-reference-person:8080' && 
             curl -i -X POST --url 'http://kong:8001/services/bip-reference-person/routes' --data 'hosts[]=bip.reference.person.com'"
    restart: on-failure
    environment:
      - KONG_DATABASE=postgres
      - KONG_PG_HOST=kong-database
    links:
      - kong-database
    depends_on:
      - kong-database
    networks:
      - bip
      
  #######################################
  # Kong: The API Gateway
  #######################################
  kong:
    image: kong:latest
    restart: always
    environment:
      - KONG_DATABASE=postgres
      - KONG_PG_HOST=kong-database
      - KONG_PG_DATABASE=kong
      - KONG_ADMIN_LISTEN=0.0.0.0:8001
      - KONG_PROXY_LISTEN=0.0.0.0:8000
      - KONG_PROXY_LISTEN_SSL=0.0.0.0:8443
    links:
      - kong-migration
      - kong-database
    healthcheck:
      test: ["CMD", "curl", "-f", "http://kong:8001"]
      interval: 5s
      timeout: 2s
      retries: 15
    ports:
      - "8001:8001"
      - "8000:8000"
    networks:
      - bip
      
  #######################################
  # Konga database prepare
  #######################################
  konga-prepare:
    image: pantsel/konga:next
    command: "-c prepare -a postgres -u postgresql://kong@kong-database:5432/konga_db"
    networks:
      - bip
    restart: on-failure
    links:
      - kong-database
    depends_on:
      - kong-database

  #######################################
  # Konga: Kong GUI
  #######################################
  konga:
    image: pantsel/konga:next
    restart: always
    networks:
        - bip
    environment:
      DB_ADAPTER: postgres
      DB_HOST: kong-database
      DB_USER: kong
      TOKEN_SECRET: km1GUr4RkcQD7DewhJPNXrCuZwcKmqjb
      DB_DATABASE: konga_db
      NODE_ENV: production
    depends_on:
      - kong-database
    ports:
      - "1337:1337"

networks:
  bip:
    driver: bridge